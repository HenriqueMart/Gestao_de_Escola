
package br.com.ifba.gestaoalunos.view.testes;

import br.com.ifba.gestaoalunos.view.*;
import br.com.ifba.gestaoalunos.controller.GestaoAlunoIController;
import br.com.ifba.gestaoalunos.entity.Alunos;
import br.com.ifba.infrastructure.util.StringUtil;
import br.com.ifba.prg03_scedu.Prg03SceduApplication;
import javax.swing.JOptionPane;
import lombok.Getter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.context.ConfigurableApplicationContext;

public class TelaEditar1 extends javax.swing.JFrame {

    //Declaração dos atributos da classe
    private static final Logger log = LoggerFactory.getLogger(TelaEditar1.class);
    @Getter private final Long idAlunoEscolhido;
    private final GestaoAlunoIController gestaoAlunoController;

    public TelaEditar1(Long idAlunoEscolhido, GestaoAlunoIController gestaoAlunoController) {
        this.idAlunoEscolhido = idAlunoEscolhido;
        this.gestaoAlunoController = gestaoAlunoController;
        initComponents();
        carregarDados();
    }
    
    //Método reponsavel por pegar os dados atuais do aluno que será editado
    private void carregarDados(){
        try{
            // Encontra o aluno no banco de dados usando o ID fornecido
            Alunos alunoEncontrado = this.gestaoAlunoController.findById(idAlunoEscolhido);
            txtNomeAtual.setText(alunoEncontrado.getNome());
            txtCodigoAtual.setText(alunoEncontrado.getNomeSocial());
            /*
            if(AlunoEncontrado.isAtivo()){
                txtStatusAtual.setText("ATIVO");
            }else{
                txtStatusAtual.setText("INATIVO");
            }
            */
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, StringUtil.getFindByIdError(this.idAlunoEscolhido), "ERRO", JOptionPane.ERROR_MESSAGE);
            dispose();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDados = new javax.swing.JPanel();
        lblDadosAtuais = new javax.swing.JLabel();
        txtNomeAtual = new javax.swing.JTextField();
        txtCodigoAtual = new javax.swing.JTextField();
        txtStatusAtual = new javax.swing.JTextField();
        lblDadosNovos = new javax.swing.JLabel();
        txtNovoNome = new javax.swing.JTextField();
        txtNovoCodigo = new javax.swing.JTextField();
        cbxNovoStatus = new javax.swing.JComboBox<>();
        pnlSalvar = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlDados.setBackground(new java.awt.Color(110, 118, 187));

        lblDadosAtuais.setText("Atual");

        txtNomeAtual.setEditable(false);
        txtNomeAtual.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtNomeAtual.setFocusable(false);

        txtCodigoAtual.setEditable(false);
        txtCodigoAtual.setFocusable(false);

        txtStatusAtual.setEditable(false);
        txtStatusAtual.setFocusable(false);

        lblDadosNovos.setText("Novo");

        cbxNovoStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "ATIVO", "INATIVO" }));

        javax.swing.GroupLayout pnlDadosLayout = new javax.swing.GroupLayout(pnlDados);
        pnlDados.setLayout(pnlDadosLayout);
        pnlDadosLayout.setHorizontalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDadosLayout.createSequentialGroup()
                        .addComponent(txtStatusAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlDadosLayout.createSequentialGroup()
                        .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtCodigoAtual, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(txtNomeAtual))
                        .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDadosLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtNovoNome))
                            .addGroup(pnlDadosLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlDadosLayout.createSequentialGroup()
                                        .addComponent(cbxNovoStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtNovoCodigo))))))
                .addContainerGap())
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(lblDadosAtuais)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addComponent(lblDadosNovos)
                .addGap(77, 77, 77))
        );
        pnlDadosLayout.setVerticalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDadosAtuais)
                    .addComponent(lblDadosNovos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNovoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigoAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNovoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStatusAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxNovoStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSalvar.setBackground(new java.awt.Color(110, 118, 187));

        btnSalvar.setText("SALVAR");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSalvarLayout = new javax.swing.GroupLayout(pnlSalvar);
        pnlSalvar.setLayout(pnlSalvarLayout);
        pnlSalvarLayout.setHorizontalGroup(
            pnlSalvarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSalvarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar)
                .addGap(152, 152, 152))
        );
        pnlSalvarLayout.setVerticalGroup(
            pnlSalvarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSalvarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSalvar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDados, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        try{
            log.info("Iniciando ação de salvar");

            Alunos novoAluno = this.gestaoAlunoController.findById(idAlunoEscolhido);
            if (!(txtNovoNome.getText().isEmpty())) {
                novoAluno.setNome(txtNovoNome.getText());
                log.info("Nome do aluno atualizado para: {0}", txtNovoNome.getText());
            }
            if (!(txtNovoCodigo.getText().isEmpty())) {
                novoAluno.setNomeSocial(txtNovoCodigo.getText());
                log.info("Código do aluno atualizado para: {0}", txtNovoCodigo.getText());
            }
            
            /*
            if (!(cbxNovoStatus.getSelectedItem().equals(" "))) {
                if (cbxNovoStatus.getSelectedItem().toString().equals("ATIVO")) {
                    novoAluno.setAtivo(true);
                    log.info("Status do aluno atualizado para: ATIVO");
                } else {
                    novoAluno.setAtivo(false);
                    log.info("Status do aluno atualizado para: INATIVO");
                }
            }*/

            int resposta = JOptionPane.showConfirmDialog(null, "Deseja continuar?", "Confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (resposta == JOptionPane.YES_OPTION) {
                log.info("Usuário confirmou a operação");
                // Altera os dados do Banco
                this.gestaoAlunoController.update(novoAluno);
                log.info("Dados do aluno atualizados no banco de dados");
            } else {
                log.info("Usuário cancelou a operação");
                JOptionPane.showConfirmDialog(null, "Operação Cancelada", "Confirmação", JOptionPane.DEFAULT_OPTION, JOptionPane.CANCEL_OPTION);
            }
            // Fecha a janela atual
            dispose();
            log.info("Janela fechada");
        } catch (Exception e) {
            log.info("Erro ao salvar o aluno", e);
            JOptionPane.showMessageDialog(null, StringUtil.getUPDATE_ERROR(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaEditar1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaEditar1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaEditar1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaEditar1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form*/
        
        ConfigurableApplicationContext context = 
            new SpringApplicationBuilder(Prg03SceduApplication.class)
            .headless(false)
            .run(args);

            TelaEditar1 telaEditar = context.getBean(TelaEditar1.class);
            telaEditar.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbxNovoStatus;
    private javax.swing.JLabel lblDadosAtuais;
    private javax.swing.JLabel lblDadosNovos;
    private javax.swing.JPanel pnlDados;
    private javax.swing.JPanel pnlSalvar;
    private javax.swing.JTextField txtCodigoAtual;
    private javax.swing.JTextField txtNomeAtual;
    private javax.swing.JTextField txtNovoCodigo;
    private javax.swing.JTextField txtNovoNome;
    private javax.swing.JTextField txtStatusAtual;
    // End of variables declaration//GEN-END:variables
}
